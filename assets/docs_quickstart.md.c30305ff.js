import{o as n,c as s,a}from"./app.c8f7062b.js";const t='{"title":"快速上手","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用前准备","slug":"使用前准备"},{"level":2,"title":"如何使用","slug":"如何使用"},{"level":3,"title":"1. 安装 Taro 脚手架工具","slug":"_1-安装-taro-脚手架工具"},{"level":3,"title":"2. 初始化项目","slug":"_2-初始化项目"},{"level":3,"title":"3. 安装 taro-ui-vue3","slug":"_3-安装-taro-ui-vue3"},{"level":3,"title":"4. 使用 taro-ui-vue3","slug":"_4-使用-taro-ui-vue3"},{"level":2,"title":"编译并预览","slug":"编译并预览"}],"relativePath":"docs/quickstart.md","lastUpdated":1620117077293}',p={},o=a('<h1 id="快速上手"><a class="header-anchor" href="#快速上手" aria-hidden="true">#</a> 快速上手</h1><hr><h2 id="使用前准备"><a class="header-anchor" href="#使用前准备" aria-hidden="true">#</a> 使用前准备</h2><p>在使用之前，推荐学习 <code>Taro</code> 和 <code>ES2015</code>，并正确配置 <code>Node.js</code> v8.x 或以上版本</p><h2 id="如何使用"><a class="header-anchor" href="#如何使用" aria-hidden="true">#</a> 如何使用</h2><h3 id="_1-安装-taro-脚手架工具"><a class="header-anchor" href="#_1-安装-taro-脚手架工具" aria-hidden="true">#</a> 1. 安装 Taro 脚手架工具</h3><p>安装 <code>Taro</code> 开发工具 <code>@tarojs/cli</code></p><p>使用 <code>npm</code> 或者 <code>yarn</code> 全局安装，或者直接使用 <a href="https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b" target="_blank" rel="noopener noreferrer">npx</a></p><div class="language-bash"><pre><code>$ <span class="token function">npm</span> <span class="token function">install</span> -g @tarojs/cli\n$ <span class="token function">yarn</span> global <span class="token function">add</span> @tarojs/cli\n</code></pre></div><h3 id="_2-初始化项目"><a class="header-anchor" href="#_2-初始化项目" aria-hidden="true">#</a> 2. 初始化项目</h3><div class="language-bash"><pre><code>$ taro init myApp\n</code></pre></div><h3 id="_3-安装-taro-ui-vue3"><a class="header-anchor" href="#_3-安装-taro-ui-vue3" aria-hidden="true">#</a> 3. 安装 <code>taro-ui-vue3</code></h3><div class="language-bash"><pre><code>$ <span class="token builtin class-name">cd</span> myApp\n$ <span class="token function">npm</span> <span class="token function">install</span> taro-ui-vue3\n</code></pre></div><blockquote><p>因为要支持自定义主题功能，需要将样式从组件中抽离出来，在微信小程序中依赖 globalClass 功能，所以需要微信基础库版本在 v2.2.3 以上。</p></blockquote><h3 id="_4-使用-taro-ui-vue3"><a class="header-anchor" href="#_4-使用-taro-ui-vue3" aria-hidden="true">#</a> 4. 使用 <code>taro-ui-vue3</code></h3><h4 id="全局引用组件和样式-引用全部组件和样式"><a class="header-anchor" href="#全局引用组件和样式-引用全部组件和样式" aria-hidden="true">#</a> <strong>全局引用组件和样式 -- 引用全部组件和样式</strong></h4><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3&#39;</span>\n\n<span class="token comment">// 引用全部组件样式</span>\n<span class="token keyword">import</span> <span class="token string">&#39;taro-ui-vue3/dist/style/index.scss&#39;</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 引用全部组件</span>\n<span class="token keyword">const</span> tuv3 <span class="token operator">=</span> <span class="token function">createUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nApp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>tuv3<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App\n</code></pre></div><h4 id="全局引用组件和样式-按需引用部分组件和样式"><a class="header-anchor" href="#全局引用组件和样式-按需引用部分组件和样式" aria-hidden="true">#</a> <strong>全局引用组件和样式 -- 按需引用部分组件和样式</strong></h4><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createUI <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> \n  AtButton<span class="token punctuation">,</span> \n  AtInput<span class="token punctuation">,</span> \n  AtTabs \n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3/lib&#39;</span>\n\n<span class="token comment">// 引用上述组件对应的样式文件</span>\n<span class="token keyword">import</span> <span class="token string">&#39;taro-ui-vue3/dist/style/components/button.scss&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;taro-ui-vue3/dist/style/components/input.scss&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;taro-ui-vue3/dist/style/components/tabs.scss&#39;</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 引用部分组件</span>\n<span class="token keyword">const</span> tuv3 <span class="token operator">=</span> <span class="token function">createUI</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  AtButton<span class="token punctuation">,</span> \n  AtInput<span class="token punctuation">,</span> \n  AtTabs\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nApp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>tuv3<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App\n</code></pre></div><h4 id="局部按需引用部分组件和组件样式"><a class="header-anchor" href="#局部按需引用部分组件和组件样式" aria-hidden="true">#</a> <strong>局部按需引用部分组件和组件样式</strong></h4><div class="language-typescript"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AtButton <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;taro-ui-vue3/lib&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;taro-ui-vue3/dist/style/components/button.scss&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span>\n    AtButton\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="在样式文件中引用组件样式"><a class="header-anchor" href="#在样式文件中引用组件样式" aria-hidden="true">#</a> <strong>在样式文件中引用组件样式</strong></h4><div class="language-scss"><pre><code><span class="token comment">//在 `app.scss` 样式中引入全部或部分组件样式</span>\n<span class="token keyword">@import</span> <span class="token string">&quot;taro-ui-vue3/dist/style/index.scss&quot;</span><span class="token punctuation">;</span> \n\n<span class="token comment">// 在页面样式中引入样式中部分组件样式</span>\n<span class="token keyword">@import</span> <span class="token string">&quot;taro-ui-vue3/dist/style/components/button.scss&quot;</span><span class="token punctuation">;</span> \n</code></pre></div><blockquote><p>具体的组件样式文件请查看 <a href="https://github.com/b2nil/taro-ui-vue3/tree/master/src/style/components" target="_blank" rel="noopener noreferrer">组件样式列表</a></p></blockquote><h2 id="编译并预览"><a class="header-anchor" href="#编译并预览" aria-hidden="true">#</a> 编译并预览</h2><p>进入项目目录开始开发，可以选择小程序预览模式，或者 h5 预览模式，若使用小程序预览模式，则需要自行下载并打开对应的小程序开发者工具，并选择预览项目根目录。</p><p><strong>微信小程序编译预览模式</strong></p><div class="language-bash"><pre><code><span class="token comment"># npm script</span>\n$ <span class="token function">npm</span> run dev:weapp\n<span class="token comment"># 仅限全局安装</span>\n$ taro build --type weapp --watch\n<span class="token comment"># npx用户也可以使用</span>\n$ npx taro build --type weapp --watch\n</code></pre></div><p><strong>支付宝小程序编译预览模式</strong></p><div class="language-bash"><pre><code><span class="token comment"># npm script</span>\n$ <span class="token function">npm</span> run dev:alipay\n<span class="token comment"># 仅限全局安装</span>\n$ taro build --type alipay --watch\n<span class="token comment"># npx 用户也可以使用</span>\n$ npx taro build --type alipay --watch\n</code></pre></div><p><strong>百度小程序编译预览模式</strong></p><div class="language-bash"><pre><code><span class="token comment"># npm script</span>\n$ <span class="token function">npm</span> run dev:swan\n<span class="token comment"># 仅限全局安装</span>\n$ taro build --type swan --watch\n<span class="token comment"># npx 用户也可以使用</span>\n$ npx taro build --type swan --watch\n</code></pre></div><p><strong>H5 编译预览模式</strong></p><p>使用 <code>taro-ui-vue3</code> 的项目编译至 h5 时，暂时需要使用脚本先修改 <code>@tarojs/components/dist-h5/vue3/index.js</code>， 将所有组件导出，方便按需引用。然后通过 webpack 配置 <code>alias</code> 将 <code>@tarojs/components$</code> 指向 <code>@tarojs/components/dist-h5/vue3/index.js</code>。</p><p>具体 h5 编译配置方案如下：</p><ul><li><p>在项目的 <code>config</code> 目录下增加一个 h5 构建脚本: <a href="https://raw.githubusercontent.com/b2nil/taro-ui-vue3/master/config/h5-building-script.js" target="_blank" rel="noopener noreferrer">h5-building-script.js</a></p></li><li><p>将 <code>package.json</code> 下的 <code>build:h5</code> 命令修改为： <code>&quot;build:h5&quot;: &quot;node ./config/h5-building-script.js &amp;&amp; taro build --type h5&quot;</code></p></li><li><p>在 <code>config/index.js</code> 中的 <code>h5</code> 下添加 webpack alias 设置：</p><div class="language-ts"><pre><code>h5<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">webpackChain</span><span class="token punctuation">(</span>chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    chain<span class="token punctuation">.</span>resolve<span class="token punctuation">.</span>alias\n      <span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>\n        <span class="token string">&#39;@tarojs/components$&#39;</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;@tarojs/components/dist-h5/vue3/index.js&#39;</span>\n      <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div></li></ul><p>然后运行下列命令之一进行编译：</p><div class="language-bash"><pre><code><span class="token comment"># npm script</span>\n$ <span class="token function">npm</span> run dev:h5\n<span class="token comment"># 仅限全局安装</span>\n$ taro build --type h5 --watch\n<span class="token comment"># npx 用户也可以使用</span>\n$ npx taro build --type h5 --watch\n</code></pre></div>',38);p.render=function(a,t,p,e,c,r){return n(),s("div",null,[o])};export default p;export{t as __pageData};
